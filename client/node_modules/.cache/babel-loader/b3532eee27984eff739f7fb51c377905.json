{"ast":null,"code":"var _jsxFileName = \"/Users/mert/Desktop/Side Projects/ecommerce-app/src/pages/shop/shop.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // react routing\n\nimport { Route, Routes } from \"react-router-dom\"; // components\n\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\"; // firebase\n\nimport { firestore, convertCollectionToMap } from \"../../firebase/firebase.utils\";\nimport { collection, onSnapshot } from \"firebase/firestore\"; // redux\n\nimport { useDispatch } from \"react-redux\";\nimport { UpdateCollections } from \"../../redux/shop/shop.actions\"; // HOC (high order component)\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nconst ShopPage = props => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const collectionRef = collection(firestore, \"collections\"); // onShapshot returns a call back funtion to remove the listener\n\n    const unsubscribeFromSnapshot = onSnapshot(collectionRef, snapshot => {\n      const collectionsMap = convertCollectionToMap(snapshot);\n      dispatch(UpdateCollections(collectionsMap)); // the data's loaded so set loading to false\n\n      setLoading(false);\n    });\n    return () => unsubscribeFromSnapshot();\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \":collectionId\",\n        element: /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShopPage, \"hJqoo2vZ0MjKvP7UMKYtoEITYS4=\", false, function () {\n  return [useDispatch];\n});\n\n_c3 = ShopPage;\nexport default ShopPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");\n$RefreshReg$(_c3, \"ShopPage\");","map":{"version":3,"sources":["/Users/mert/Desktop/Side Projects/ecommerce-app/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","useState","Route","Routes","CollectionsOverview","CollectionPage","firestore","convertCollectionToMap","collection","onSnapshot","useDispatch","UpdateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","props","loading","setLoading","dispatch","collectionRef","unsubscribeFromSnapshot","snapshot","collectionsMap"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B,C,CACA;;AACA,SACEC,SADF,EAEEC,sBAFF,QAGO,+BAHP;AAIA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,oBAAvC,C,CACA;;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,QAAkC,+BAAlC,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACR,mBAAD,CAAlD;KAAMS,8B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACP,cAAD,CAA7C;MAAMS,yB;;AAEN,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMkB,QAAQ,GAAGT,WAAW,EAA5B;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,aAAa,GAAGZ,UAAU,CAACF,SAAD,EAAY,aAAZ,CAAhC,CADc,CAGd;;AACA,UAAMe,uBAAuB,GAAGZ,UAAU,CAACW,aAAD,EAAiBE,QAAD,IAAc;AACtE,YAAMC,cAAc,GAAGhB,sBAAsB,CAACe,QAAD,CAA7C;AACAH,MAAAA,QAAQ,CAACR,iBAAiB,CAACY,cAAD,CAAlB,CAAR,CAFsE,CAGtE;;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALyC,CAA1C;AAOA,WAAO,MAAMG,uBAAuB,EAApC;AACD,GAZQ,EAYN,CAACF,QAAD,CAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,OAAO,eACL,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEF,OAA3C;AAAA,aAAwDD;AAAxD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,OAAO,eAAE,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEC,OAAtC;AAAA,aAAmDD;AAAnD;AAAA;AAAA;AAAA;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnCD;;GAAMD,Q;UAGaL,W;;;MAHbK,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// react routing\nimport { Route, Routes } from \"react-router-dom\";\n// components\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\n// firebase\nimport {\n  firestore,\n  convertCollectionToMap,\n} from \"../../firebase/firebase.utils\";\nimport { collection, onSnapshot } from \"firebase/firestore\";\n// redux\nimport { useDispatch } from \"react-redux\";\nimport { UpdateCollections } from \"../../redux/shop/shop.actions\";\n\n// HOC (high order component)\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = (props) => {\n  const [loading, setLoading] = useState(true);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const collectionRef = collection(firestore, \"collections\");\n\n    // onShapshot returns a call back funtion to remove the listener\n    const unsubscribeFromSnapshot = onSnapshot(collectionRef, (snapshot) => {\n      const collectionsMap = convertCollectionToMap(snapshot);\n      dispatch(UpdateCollections(collectionsMap));\n      // the data's loaded so set loading to false\n      setLoading(false);\n    });\n\n    return () => unsubscribeFromSnapshot();\n  }, [dispatch]);\n\n  return (\n    <div className=\"shop-page\">\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n          }\n        />\n        <Route\n          path=\":collectionId\"\n          element={<CollectionPageWithSpinner isLoading={loading} {...props} />}\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default ShopPage;\n"]},"metadata":{},"sourceType":"module"}