{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\"; // to display actions to the dev console\n\nimport logger from \"redux-logger\"; // defaults to localStorage for web\n\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport rootReducer from \"./root-reducer\";\nconst middlewares = [logger];\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"cart\"]\n};\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport { store, persistedReducer };","map":{"version":3,"sources":["/Users/mert/Desktop/Side Projects/ecommerce-app/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","storage","persistStore","persistReducer","rootReducer","middlewares","persistConfig","key","whitelist","store","persistedReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C,C,CACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,WAAW,GAAG,CAACL,MAAD,CAApB;AAEA,MAAMM,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBN,EAAAA,OAFoB;AAGpBO,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHS,CAAtB;AAMA,MAAMC,KAAK,GAAGX,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGM,WAAJ,CAA7B,CAAzB;AACA,MAAMK,gBAAgB,GAAGP,cAAc,CAACG,aAAD,EAAgBF,WAAhB,CAAvC;AAEA,SAASK,KAAT,EAAgBC,gBAAhB","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\n// to display actions to the dev console\nimport logger from \"redux-logger\";\n// defaults to localStorage for web\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore, persistReducer } from \"redux-persist\";\n\nimport rootReducer from \"./root-reducer\";\n\nconst middlewares = [logger];\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"cart\"],\n};\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport { store, persistedReducer };\n"]},"metadata":{},"sourceType":"module"}