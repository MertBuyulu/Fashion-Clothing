{"ast":null,"code":"var _jsxFileName = \"/Users/mert/Desktop/Side Projects/ecommerce-app/src/pages/shop/shop.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\"; // react routing\n\nimport { Route, Routes } from \"react-router-dom\"; // components\n\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\"; // redux\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selector\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { createStructuredSelector } from \"reselect\"; // HOC (high order component)\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nconst ShopPage = () => {\n  _s();\n\n  const {\n    isCollectionFetching,\n    isCollectionsLoaded\n  } = useSelector(structuredSelector);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchCollectionsStartAsync());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n        isLoading: isCollectionFetching\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \":collectionId\",\n      element: /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n        isLoading: !isCollectionsLoaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShopPage, \"DBmqCvV/ZvAKJmFX0hFG0eQhTfo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c3 = ShopPage;\nconst structuredSelector = createStructuredSelector({\n  selectIsCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\nexport default ShopPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");\n$RefreshReg$(_c3, \"ShopPage\");","map":{"version":3,"sources":["/Users/mert/Desktop/Side Projects/ecommerce-app/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","Routes","CollectionsOverview","CollectionPage","useDispatch","useSelector","selectIsCollectionFetching","selectIsCollectionsLoaded","fetchCollectionsStartAsync","createStructuredSelector","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","isCollectionFetching","isCollectionsLoaded","structuredSelector","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,0BADF,EAEEC,yBAFF,QAGO,gCAHP;AAIA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,wBAAT,QAAyC,UAAzC,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACR,mBAAD,CAAlD;KAAMS,8B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACP,cAAD,CAA7C;MAAMS,yB;;AAEN,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,oBAAF;AAAwBC,IAAAA;AAAxB,MACJV,WAAW,CAACW,kBAAD,CADb;AAGA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ,CAACT,0BAA0B,EAA3B,CAAR;AACD,GAFQ,EAEN,CAACS,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,OAAO,eACL,QAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,eADP;AAEE,MAAA,OAAO,eAAE,QAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACC;AAAvC;AAAA;AAAA;AAAA;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAxBD;;GAAMF,Q;UAEFR,W,EAEeD,W;;;MAJbS,Q;AA0BN,MAAMG,kBAAkB,GAAGP,wBAAwB,CAAC;AAClDH,EAAAA,0BAA0B,EAAEA,0BADsB;AAElDS,EAAAA,mBAAmB,EAAER;AAF6B,CAAD,CAAnD;AAKA,eAAeM,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\n// react routing\nimport { Route, Routes } from \"react-router-dom\";\n// components\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\n// redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectIsCollectionFetching,\n  selectIsCollectionsLoaded,\n} from \"../../redux/shop/shop.selector\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { createStructuredSelector } from \"reselect\";\n\n// HOC (high order component)\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = () => {\n  const { isCollectionFetching, isCollectionsLoaded } =\n    useSelector(structuredSelector);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCollectionsStartAsync());\n  }, [dispatch]);\n\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        element={\n          <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} />\n        }\n      />\n      <Route\n        path=\":collectionId\"\n        element={<CollectionPageWithSpinner isLoading={!isCollectionsLoaded} />}\n      />\n    </Routes>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  selectIsCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded,\n});\n\nexport default ShopPage;\n"]},"metadata":{},"sourceType":"module"}