{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"; // signInWithRedirect does not give user closed the pop up error\n\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\nconst config = {\n  apiKey: \"AIzaSyCRYsDOZ4_Pi9JPVjNHRyFDP5A0RVk9Zyo\",\n  authDomain: \"ecommerce-db-fdef6.firebaseapp.com\",\n  projectId: \"ecommerce-db-fdef6\",\n  storageBucket: \"ecommerce-db-fdef6.appspot.com\",\n  messagingSenderId: \"378444362884\",\n  appId: \"1:378444362884:web:e45424fcdd2e91dcf67ed1\"\n};\ninitializeApp(config);\nexport const firestore = getFirestore();\nexport const auth = getAuth();\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  // if the user is not signed in run the code below.\n  if (!userAuth) return;\n  const userRef = doc(firestore, `users/${userAuth.uid}`);\n  const snapShot = await getDoc(userRef);\n\n  if (!snapShot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (err) {\n      console.log(\"error creating user\", err.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n};\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompts: \"select_account\"\n});\nexport const signInWithGoogle = () => signInWithPopup(auth, provider);","map":{"version":3,"sources":["/Users/mert/Desktop/Side Projects/ecommerce-app/src/firebase/firebase.utils.js"],"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","getFirestore","doc","getDoc","setDoc","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","createUserProfileDocument","userAuth","additionalData","userRef","uid","snapShot","exists","displayName","email","createdAt","Date","err","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","provider","setCustomParameters","prompts","signInWithGoogle"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,EAAkBC,kBAAlB,EAAsCC,eAAtC,QAA6D,eAA7D,C,CACA;;AACA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAkD,oBAAlD;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,oCAFC;AAGbC,EAAAA,SAAS,EAAE,oBAHE;AAIbC,EAAAA,aAAa,EAAE,gCAJF;AAKbC,EAAAA,iBAAiB,EAAE,cALN;AAMbC,EAAAA,KAAK,EAAE;AANM,CAAf;AASAd,aAAa,CAACQ,MAAD,CAAb;AAEA,OAAO,MAAMO,SAAS,GAAGX,YAAY,EAA9B;AACP,OAAO,MAAMY,IAAI,GAAGf,OAAO,EAApB;AAEP,OAAO,MAAMgB,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E;AACA,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGf,GAAG,CAACU,SAAD,EAAa,SAAQG,QAAQ,CAACG,GAAI,EAAlC,CAAnB;AACA,QAAMC,QAAQ,GAAG,MAAMhB,MAAM,CAACc,OAAD,CAA7B;;AAEA,MAAI,CAACE,QAAQ,CAACC,MAAT,EAAL,EAAwB;AACtB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBP,QAA/B;AACA,UAAMQ,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMpB,MAAM,CAACa,OAAD,EAAU;AACpBI,QAAAA,WADoB;AAEpBC,QAAAA,KAFoB;AAGpBC,QAAAA,SAHoB;AAIpB,WAAGP;AAJiB,OAAV,CAAZ;AAMD,KAPD,CAOE,OAAOS,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,GAAG,CAACG,OAAvC;AACD;AACF;;AACD,SAAOX,OAAP;AACD,CAvBM;AAyBP,OAAO,MAAMY,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACxE,QAAMC,aAAa,GAAGpB,SAAS,CAACqB,UAAV,CAAqBH,aAArB,CAAtB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYK,aAAZ;AACD,CAHM;AAKP,MAAME,QAAQ,GAAG,IAAInC,kBAAJ,EAAjB;AACAmC,QAAQ,CAACC,mBAAT,CAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMrC,eAAe,CAACa,IAAD,EAAOqB,QAAP,CAA9C","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\n// signInWithRedirect does not give user closed the pop up error\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\n\nconst config = {\n  apiKey: \"AIzaSyCRYsDOZ4_Pi9JPVjNHRyFDP5A0RVk9Zyo\",\n  authDomain: \"ecommerce-db-fdef6.firebaseapp.com\",\n  projectId: \"ecommerce-db-fdef6\",\n  storageBucket: \"ecommerce-db-fdef6.appspot.com\",\n  messagingSenderId: \"378444362884\",\n  appId: \"1:378444362884:web:e45424fcdd2e91dcf67ed1\",\n};\n\ninitializeApp(config);\n\nexport const firestore = getFirestore();\nexport const auth = getAuth();\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  // if the user is not signed in run the code below.\n  if (!userAuth) return;\n\n  const userRef = doc(firestore, `users/${userAuth.uid}`);\n  const snapShot = await getDoc(userRef);\n\n  if (!snapShot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (err) {\n      console.log(\"error creating user\", err.message);\n    }\n  }\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n};\n\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({ prompts: \"select_account\" });\nexport const signInWithGoogle = () => signInWithPopup(auth, provider);\n"]},"metadata":{},"sourceType":"module"}