{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { convertCollectionToMap, firestore } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = collection(firestore, \"collections\");\n    dispatch(fetchCollectionStart()); // fetch the collections\n\n    getDocs(collectionRef).then(snapshot => {\n      const collectionsMap = convertCollectionToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/mert/Desktop/Side Projects/Ecommerce-App/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","collection","getDocs","convertCollectionToMap","firestore","fetchCollectionStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,SACEC,sBADF,EAEEC,SAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEN,eAAe,CAACO;AADmB,CAAP,CAA7B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC1DH,EAAAA,IAAI,EAAEN,eAAe,CAACU,yBADoC;AAE1DC,EAAAA,OAAO,EAAEF;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACxDP,EAAAA,IAAI,EAAEN,eAAe,CAACc,yBADkC;AAExDH,EAAAA,OAAO,EAAEE;AAF+C,CAAnB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGhB,UAAU,CAACG,SAAD,EAAY,aAAZ,CAAhC;AACAY,IAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR,CAFmB,CAInB;;AACAH,IAAAA,OAAO,CAACe,aAAD,CAAP,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,YAAMV,cAAc,GAAGN,sBAAsB,CAACgB,QAAD,CAA7C;AACAH,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KAJH,EAKGW,KALH,CAKUC,KAAD,IAAWL,QAAQ,CAACJ,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAL5B;AAMD,GAXD;AAYD,CAbM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\n\nimport { collection, getDocs } from \"firebase/firestore\";\nimport {\n  convertCollectionToMap,\n  firestore,\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n});\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = collection(firestore, \"collections\");\n    dispatch(fetchCollectionStart());\n\n    // fetch the collections\n    getDocs(collectionRef)\n      .then((snapshot) => {\n        const collectionsMap = convertCollectionToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}