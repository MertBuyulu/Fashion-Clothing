{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { auth, createUserProfileDocument } from \"./firebase.utils\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { onSnapshot } from \"firebase/firestore\";\nexport const useGoogleUser = () => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({});\n  useEffect(() => {\n    const unsubscribeFromAuth = onAuthStateChanged(auth, async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth); // Now calls `onSnapshot` as a function; DocumentReference passed as first argument\n        // and callback function is now the second argument\n\n        onSnapshot(userRef, snapshot => {\n          setCurrentUser({\n            id: snapshot.id,\n            ...snapshot.data()\n          });\n        });\n      } // user is not signed in, so userAuth will be null\n      else {\n          setCurrentUser({\n            currentUser: userAuth\n          });\n        }\n    });\n    console.log(currentUser);\n    return () => {\n      unsubscribeFromAuth();\n    };\n  });\n  return currentUser;\n};\n\n_s(useGoogleUser, \"ia0l58pIwzCriyxaeyhKjUQd3Xo=\");","map":{"version":3,"sources":["/Users/mert/Desktop/Side Projects/ecommerce-app/src/firebase/custom-hooks.js"],"names":["useState","useEffect","auth","createUserProfileDocument","onAuthStateChanged","onSnapshot","useGoogleUser","currentUser","setCurrentUser","unsubscribeFromAuth","userAuth","userRef","snapshot","id","data","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,kBAAhD;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,mBAAmB,GAAGL,kBAAkB,CAACF,IAAD,EAAO,MAAOQ,QAAP,IAAoB;AACvE,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAG,MAAMR,yBAAyB,CAACO,QAAD,CAA/C,CADY,CAEZ;AACA;;AACAL,QAAAA,UAAU,CAACM,OAAD,EAAWC,QAAD,IAAc;AAChCJ,UAAAA,cAAc,CAAC;AACbK,YAAAA,EAAE,EAAED,QAAQ,CAACC,EADA;AAEb,eAAGD,QAAQ,CAACE,IAAT;AAFU,WAAD,CAAd;AAID,SALS,CAAV;AAMD,OAVD,CAWA;AAXA,WAYK;AACHN,UAAAA,cAAc,CAAC;AACbD,YAAAA,WAAW,EAAEG;AADA,WAAD,CAAd;AAGD;AACF,KAlB6C,CAA9C;AAoBAK,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AAEA,WAAO,MAAM;AACXE,MAAAA,mBAAmB;AACpB,KAFD;AAGD,GA1BQ,CAAT;AA4BA,SAAOF,WAAP;AACD,CAhCM;;GAAMD,a","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { auth, createUserProfileDocument } from \"./firebase.utils\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { onSnapshot } from \"firebase/firestore\";\n\nexport const useGoogleUser = () => {\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    const unsubscribeFromAuth = onAuthStateChanged(auth, async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        // Now calls `onSnapshot` as a function; DocumentReference passed as first argument\n        // and callback function is now the second argument\n        onSnapshot(userRef, (snapshot) => {\n          setCurrentUser({\n            id: snapshot.id,\n            ...snapshot.data(),\n          });\n        });\n      }\n      // user is not signed in, so userAuth will be null\n      else {\n        setCurrentUser({\n          currentUser: userAuth,\n        });\n      }\n    });\n\n    console.log(currentUser);\n\n    return () => {\n      unsubscribeFromAuth();\n    };\n  });\n\n  return currentUser;\n};\n"]},"metadata":{},"sourceType":"module"}