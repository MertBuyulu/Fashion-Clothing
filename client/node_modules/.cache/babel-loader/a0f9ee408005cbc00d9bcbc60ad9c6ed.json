{"ast":null,"code":"import CartActionTypes from \"./cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n}; // NOTE: we need to return versions of our states so that our components know what to render\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return { ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        // remove any instances of a cart item we want to remove from the cart\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload)\n      };\n\n    case CartActionTypes.CLEAR_CART:\n      return { ...state,\n        cartItems: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/mert/Desktop/Side Projects/ecommerce-app/client/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","cartItem","id","CLEAR_CART"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB,C,CAKA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,kBAArB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFV,OAAP;;AAIF,SAAKJ,eAAe,CAACW,QAArB;AACE,aAAO,EACL,GAAGJ,KADE;AAELF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFnB,OAAP;;AAIF,SAAKZ,eAAe,CAACa,WAArB;AACE,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFxB,OAAP;;AAIF,SAAKZ,eAAe,CAACc,oBAArB;AACE,aAAO,EACL,GAAGP,KADE;AAEL;AACAF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CACRC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBT,MAAM,CAACI,OAD5B;AAHN,OAAP;;AAQF,SAAKZ,eAAe,CAACkB,UAArB;AACE,aAAO,EACL,GAAGX,KADE;AAELF,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF;AACE,aAAOE,KAAP;AA/BJ;AAiCD,CAlCD;;AAoCA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from \"./cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: [],\n};\n\n// NOTE: we need to return versions of our states so that our components know what to render\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden,\n      };\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload),\n      };\n    case CartActionTypes.REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload),\n      };\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return {\n        ...state,\n        // remove any instances of a cart item we want to remove from the cart\n        cartItems: state.cartItems.filter(\n          (cartItem) => cartItem.id !== action.payload\n        ),\n      };\n\n    case CartActionTypes.CLEAR_CART:\n      return {\n        ...state,\n        cartItems: [],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}