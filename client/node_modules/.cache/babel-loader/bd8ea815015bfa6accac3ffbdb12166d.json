{"ast":null,"code":"// utility function to avoid rendering the same item more than once in our cart, rather we will show its quantity instead.\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  // find if the added cart item is already in our cart.\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id); // the added cart item is already in the cart, so just update its quantity and return a new array\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } // if the item does not exists in our cart, just append the new cart item to the end of cartItems array and return it.\n\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => // if the ids match, check if the item has quantity of one or more, if one then remove it from the cart\n// otherwise decrement its value by one.\ncartItems.flatMap(cartItem => {\n  return cartItem.id !== cartItemToRemove.id ? cartItem : cartItem.quantity === 1 ? [] : { ...cartItem,\n    quantity: --cartItem.quantity\n  };\n});","map":{"version":3,"sources":["/Users/mert/Desktop/Side Projects/ecommerce-app/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","flatMap"],"mappings":"AAAA;AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD;AACA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACtBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADrB,CAAzB,CAFyD,CAMzD;;AACA,MAAIH,gBAAJ,EAAsB;AACpB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACI,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADJ,GAEIH,QAHC,CAAP;AAKD,GAbwD,CAezD;;;AACA,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACD,CAjBM;AAmBP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAChC;AACA;AACAT,SAAS,CAACU,OAAV,CAAmBN,QAAD,IAAc;AAC9B,SAAOA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GACHD,QADG,GAEHA,QAAQ,CAACG,QAAT,KAAsB,CAAtB,GACA,EADA,GAEA,EAAE,GAAGH,QAAL;AAAeG,IAAAA,QAAQ,EAAE,EAAEH,QAAQ,CAACG;AAApC,GAJJ;AAKD,CAND,CAHK","sourcesContent":["// utility function to avoid rendering the same item more than once in our cart, rather we will show its quantity instead.\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  // find if the added cart item is already in our cart.\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToAdd.id\n  );\n\n  // the added cart item is already in the cart, so just update its quantity and return a new array\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === cartItemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  // if the item does not exists in our cart, just append the new cart item to the end of cartItems array and return it.\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) =>\n  // if the ids match, check if the item has quantity of one or more, if one then remove it from the cart\n  // otherwise decrement its value by one.\n  cartItems.flatMap((cartItem) => {\n    return cartItem.id !== cartItemToRemove.id\n      ? cartItem\n      : cartItem.quantity === 1\n      ? []\n      : { ...cartItem, quantity: --cartItem.quantity };\n  });\n"]},"metadata":{},"sourceType":"module"}