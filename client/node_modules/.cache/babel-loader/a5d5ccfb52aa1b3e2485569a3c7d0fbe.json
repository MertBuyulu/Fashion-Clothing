{"ast":null,"code":"var _jsxFileName = \"/Users/mert/Desktop/Side Projects/ecommerce-app/src/components/sign-in/signin.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // styles\n\nimport styled from \"styled-components\"; // components\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\"; // redux\n\nimport { useDispatch } from \"react-redux\"; // redux sagas\n\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const dispatch = useDispatch();\n  const {\n    email,\n    password\n  } = state;\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target; // if we dont spread the state, we will create an object with one property\n    // instead of two; email and password.\n\n    setState({ ...state,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    dispatch(emailSignInStart(state));\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInForm, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        id: \"email\",\n        type: \"email\",\n        name: \"email\",\n        label: \"email\",\n        value: email,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        id: \"password\",\n        type: \"password\",\n        name: \"password\",\n        label: \"password\",\n        value: password,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignInButtons, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          isGoogleSignIn: true,\n          onClick: () => dispatch(googleSignInStart()),\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"1qgtA+966f8TG4EkWvWdF5hd3MQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SignIn;\nconst SignInForm = styled.div`\n  width: 380px;\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = SignInForm;\nconst SignInButtons = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n_c3 = SignInButtons;\nexport default SignIn;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SignIn\");\n$RefreshReg$(_c2, \"SignInForm\");\n$RefreshReg$(_c3, \"SignInButtons\");","map":{"version":3,"sources":["/Users/mert/Desktop/Side Projects/ecommerce-app/src/components/sign-in/signin.component.jsx"],"names":["React","useState","styled","FormInput","CustomButton","useDispatch","googleSignInStart","emailSignInStart","SignIn","state","setState","email","password","dispatch","handleChange","event","value","name","target","handleSubmit","preventDefault","SignInForm","div","SignInButtons"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB,C,CACA;;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;;AACA,SACEC,iBADF,EAEEC,gBAFF,QAGO,+BAHP;;;AAKA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC;AAAEU,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAlC;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,KAA5B;;AAEA,QAAMK,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,KAAK,CAACG,MAA9B,CAD8B,CAE9B;AACA;;AACAR,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACQ,IAAD,GAAQD;AAApB,KAAD,CAAR;AACD,GALD;;AAOA,QAAMG,YAAY,GAAG,MAAOJ,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACK,cAAN;AACAP,IAAAA,QAAQ,CAACN,gBAAgB,CAACE,KAAD,CAAjB,CAAR;AACD,GAHD;;AAKA,sBACE,QAAC,UAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,QAAQ,EAAEU,YAAhB;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,OADL;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,KAAK,EAAC,OAJR;AAKE,QAAA,KAAK,EAAER,KALT;AAME,QAAA,YAAY,EAAEG,YANhB;AAOE,QAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,KAAK,EAAC,UAJR;AAKE,QAAA,KAAK,EAAEF,QALT;AAME,QAAA,YAAY,EAAEE,YANhB;AAOE,QAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE,QAAC,aAAD;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,cAAc,MAFhB;AAGE,UAAA,OAAO,EAAE,MAAMD,QAAQ,CAACP,iBAAiB,EAAlB,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CArDD;;GAAME,M;UAEaH,W;;;KAFbG,M;AAuDN,MAAMa,UAAU,GAAGnB,MAAM,CAACoB,GAAI;AAC9B;AACA;AACA;AACA,CAJA;MAAMD,U;AAMN,MAAME,aAAa,GAAGrB,MAAM,CAACoB,GAAI;AACjC;AACA;AACA,CAHA;MAAMC,a;AAKN,eAAef,MAAf","sourcesContent":["import React, { useState } from \"react\";\n// styles\nimport styled from \"styled-components\";\n// components\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n// redux\nimport { useDispatch } from \"react-redux\";\n// redux sagas\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../../redux/user/user.actions\";\n\nconst SignIn = () => {\n  const [state, setState] = useState({ email: \"\", password: \"\" });\n  const dispatch = useDispatch();\n  const { email, password } = state;\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    // if we dont spread the state, we will create an object with one property\n    // instead of two; email and password.\n    setState({ ...state, [name]: value });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    dispatch(emailSignInStart(state));\n  };\n\n  return (\n    <SignInForm>\n      <h2>I already have an account</h2>\n      <span>Sign in with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          label=\"email\"\n          value={email}\n          handleChange={handleChange}\n          required\n        />\n        <FormInput\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          label=\"password\"\n          value={password}\n          handleChange={handleChange}\n          required\n        />\n        <SignInButtons>\n          <CustomButton type=\"submit\">Sign In</CustomButton>\n          <CustomButton\n            type=\"button\"\n            isGoogleSignIn\n            onClick={() => dispatch(googleSignInStart())}\n          >\n            Sign in with Google\n          </CustomButton>\n        </SignInButtons>\n      </form>\n    </SignInForm>\n  );\n};\n\nconst SignInForm = styled.div`\n  width: 380px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SignInButtons = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}