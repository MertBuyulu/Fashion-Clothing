{"ast":null,"code":"var _jsxFileName = \"/Users/mert/Desktop/Side Projects/ecommerce-app/src/pages/shop/shop.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\"; // react routing\n\nimport { Route, Routes } from \"react-router-dom\"; // components\n\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\"; // redux\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectIsCollectionsLoaded } from \"../../redux/shop/shop.selector\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { createStructuredSelector } from \"reselect\"; // HOC (high order component)\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nconst ShopPage = () => {\n  _s();\n\n  const {\n    isCollectionsLoaded\n  } = useSelector(structuredSelector);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchCollectionsStartAsync());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: !isCollectionsLoaded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \":collectionId\",\n        element: /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: !isCollectionsLoaded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShopPage, \"ckkbCblUBOxWZBWbUFQ2Il9PJj0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c3 = ShopPage;\nconst structuredSelector = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\nexport default ShopPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");\n$RefreshReg$(_c3, \"ShopPage\");","map":{"version":3,"sources":["/Users/mert/Desktop/Side Projects/ecommerce-app/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","Routes","CollectionsOverview","CollectionPage","useDispatch","useSelector","selectIsCollectionsLoaded","fetchCollectionsStartAsync","createStructuredSelector","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","isCollectionsLoaded","structuredSelector","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,yBAAT,QAA0C,gCAA1C;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,wBAAT,QAAyC,UAAzC,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACP,mBAAD,CAAlD;KAAMQ,8B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACN,cAAD,CAA7C;MAAMQ,yB;;AAEN,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAA0BR,WAAW,CAACS,kBAAD,CAA3C;AAEA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAACR,0BAA0B,EAA3B,CAAR;AACD,GAFQ,EAEN,CAACQ,QAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,OAAO,eACL,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAE,CAACF;AAA5C;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,OAAO,eACL,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAE,CAACA;AAAvC;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3BD;;GAAMD,Q;UAC4BP,W,EAEfD,W;;;MAHbQ,Q;AA6BN,MAAME,kBAAkB,GAAGN,wBAAwB,CAAC;AAClDK,EAAAA,mBAAmB,EAAEP;AAD6B,CAAD,CAAnD;AAIA,eAAeM,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\n// react routing\nimport { Route, Routes } from \"react-router-dom\";\n// components\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\n// redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectIsCollectionsLoaded } from \"../../redux/shop/shop.selector\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { createStructuredSelector } from \"reselect\";\n\n// HOC (high order component)\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = () => {\n  const { isCollectionsLoaded } = useSelector(structuredSelector);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCollectionsStartAsync());\n  }, [dispatch]);\n\n  return (\n    <div className=\"shop-page\">\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <CollectionsOverviewWithSpinner isLoading={!isCollectionsLoaded} />\n          }\n        />\n        <Route\n          path=\":collectionId\"\n          element={\n            <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} />\n          }\n        />\n      </Routes>\n    </div>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded,\n});\n\nexport default ShopPage;\n"]},"metadata":{},"sourceType":"module"}